---
# tasks file for ansible_molecule
- name: Include node specific install tasks
  ansible.builtin.include_tasks: "install-{{ ansible_os_family }}.yml"

- name: Install requests
  ansible.builtin.pip:
    virtualenv: "{{ ansible_molecule_venv }}"
    name: requests
    chdir: "{{ zuul_work_dir }}"

- name: Install requirements
  ansible.builtin.pip:
    virtualenv: "{{ ansible_molecule_venv }}"
    requirements: molecule/requirements.txt
    chdir: "{{ zuul_work_dir }}"

- name: Run molecule dependency action with scenario delegated
  ansible.builtin.shell:
    cmd: |
      set -e
      . {{ ansible_molecule_venv }}/bin/activate
      python -m molecule --debug -v dependency -s delegated
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment:
    ANSIBLE_ROLE: "{{ ansible_role }}"
    ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_molecule_venv }}/bin/python"
  changed_when: true
  when: ansible_molecule_dependency | default(false) | bool

- name: Run molecule create action with scenario delegated
  ansible.builtin.shell:
    cmd: |
      set -e
      . {{ ansible_molecule_venv }}/bin/activate
      python -m molecule --debug -v create -s delegated
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment:
    ANSIBLE_ROLE: "{{ ansible_role }}"
    ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_molecule_venv }}/bin/python"
  changed_when: true
  when: ansible_molecule_create | default(false) | bool

- name: Run molecule prepare action with scenario delegated
  ansible.builtin.shell:
    cmd: |
      set -e
      . {{ ansible_molecule_venv }}/bin/activate
      python -m molecule --debug -v prepare -s delegated
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment:
    ANSIBLE_ROLE: "{{ ansible_role }}"
    ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_molecule_venv }}/bin/python"
  changed_when: true
  when: ansible_molecule_prepare | default(true) | bool

- name: Reset connection
  ansible.builtin.meta: reset_connection

- name: Run molecule converge action with scenario delegated
  ansible.builtin.shell:
    cmd: |
      set -e
      . {{ ansible_molecule_venv }}/bin/activate
      python -m molecule --debug -v converge -s delegated
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment:
    ANSIBLE_ROLE: "{{ ansible_role }}"
    ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_molecule_venv }}/bin/python"
  changed_when: true
  when: ansible_molecule_converge | default(true) | bool

- name: Run molecule verify action with scenario delegated
  ansible.builtin.shell:
    cmd: |
      set -e
      . {{ ansible_molecule_venv }}/bin/activate
      python -m molecule --debug -v verify -s delegated
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment:
    ANSIBLE_ROLE: "{{ ansible_role }}"
    ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_molecule_venv }}/bin/python"
  changed_when: true
  when: ansible_molecule_verify | default(true) | bool

- name: Run molecule destroy action with scenario delegated
  ansible.builtin.shell:
    cmd: |
      set -e
      . {{ ansible_molecule_venv }}/bin/activate
      python -m molecule --debug -v destroy -s delegated
    chdir: "{{ zuul_work_dir }}"
    executable: /bin/bash
  environment:
    ANSIBLE_ROLE: "{{ ansible_role }}"
    ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_molecule_venv }}/bin/python"
  changed_when: true
  when: ansible_molecule_destroy | default(false) | bool
